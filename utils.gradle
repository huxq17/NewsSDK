//解析XML时候要引入这个groovy的package

def copyFile(String srcFile, dstFile) {
//    ......//拷贝文件函数，用于将最后的生成物拷贝到指定的目录
}

def rmFile(String targetFile) {
//    .....//删除指定目录中的文件
}

def cleanOutput(boolean bJar = true) {
//    ....//clean的时候清理
}

def copyOutput(boolean bJar = true) {
//    ....//copyOutput内部会调用copyFile完成一次build的产出物拷贝
}

def getVersionNameAdvanced() {//老朋友
    defxmlFile = project.file("AndroidManifest.xml")
    defrootManifest = new XmlSlurper().parse(xmlFile)
    return rootManifest['@android:versionName']
}

//对于android library编译，我会disable所有的debug编译任务
def disableDebugBuild() {
    //project.tasks包含了所有的tasks，下面的findAll是寻找那些名字中带debug的Task。
    //返回值保存到targetTasks容器中
    def targetTasks = project.tasks.findAll { task ->
        task.name.contains("Debug")
    }
    //对满足条件的task，设置它为disable。如此这般，这个Task就不会被执行
    targetTasks.each {
        it.setEnabled false
    }
}
//将函数设置为extra属性中去，这样，加载utils.gradle的Project就能调用此文件中定义的函数了
ext {
    getVersionNameAdvanced = this.&getVersionNameAdvanced
    disableDebugBuild = this.&disableDebugBuild
}
tasks.whenTaskAdded {
    def taskName = it.name.toLowerCase()
    if (taskName.contains("test") ) {
        it.enabled = false
    }
}